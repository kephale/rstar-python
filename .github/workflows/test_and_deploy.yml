name: CI

on:
  push:
    branches: [ main ]
    tags: ["v*"]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
        
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: x86_64-unknown-linux-gnu

    - name: Install uv
      run: |
        python -m pip install --upgrade pip
        pip install uv
        uv sync

    - name: Install dependencies
      run: |
        uv pip install maturin pytest numpy
        
    - name: Build and install
      run: |
        uv run maturin develop --uv
        
    - name: Run tests
      run: |
        uv run pytest

  build_wheels:
    name: Build wheels on ${{ matrix.platform }}
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            platform: windows
            target: x86_64-pc-windows-msvc
          - os: macos-latest
            platform: macos
            target: x86_64-apple-darwin

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Build wheels
        env:
          CIBW_BUILD: "cp310-* cp311-*"
          CIBW_SKIP: "*-win32 *-manylinux_i686 *-musllinux*"
          CIBW_PLATFORM: ${{ matrix.platform }}
          CIBW_BEFORE_BUILD: |
            pip install maturin
            rustup target add ${{ matrix.target }}
          CIBW_ARCHS_MACOS: x86_64 arm64
          CIBW_ARCHS_LINUX: x86_64
          CIBW_ARCHS_WINDOWS: AMD64
          CIBW_ENVIRONMENT: CARGO_BUILD_TARGET=${{ matrix.target }}
        run: python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
          name: wheels-${{ matrix.platform }}

  publish:
    needs: [build_wheels]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: actions/download-artifact@v3
        with:
          path: dist

      - name: Install uv
        run: |
          python -m pip install --upgrade pip
          pip install uv
          uv sync

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          uv pip install --system twine
          find dist/wheels-* -name '*.whl' -exec mv {} dist/ \;
          python -m twine upload --skip-existing dist/*.whl